#
# vim:ts=4:expandtab
# CORE
# Copyright (c)2010-2012 the Boeing Company.
# See the LICENSE file included in this distribution.
#
''' CCNx user-defined service.
'''

import os

from core.service import CoreService, addservice
from core.misc.ipaddr import IPv4Prefix, IPv6Prefix

class CCNrBerlinService(CoreService):
    ''' This is a CCNx repository user-defined service.
    '''
    # a unique name is required, without spaces
    _name = "CCNrBerlinService"
    # you can create your own group here
    _group = "Utility"
    # list of other services this service depends on
    _depends = ()
    # per-node directories
    #_dirs = ("/tmp/")
    _dirs = ()
    # generated files (without a full path this file goes in the node's dir,
    #  e.g. /tmp/pycore.12345/n1.conf/)
    _configs = ('ccnrbservice_start.sh', 'ccnrbservice_stop.sh')
    # this controls the starting order vs other enabled services
    _startindex = 60
    # list of startup commands, also may be generated during startup
    _startup = ('/bin/bash ccnrbservice_start.sh',)
    # list of shutdown commands
    _shutdown = ('/bin/bash ccnrbservice_stop.sh',)

    _ipv4_routing = True
    _ipv6_routing = False

    @classmethod
    def generateconfig(cls, node, filename, services):
        ''' Return a string that will be written to filename, or sent to the
            GUI for user customization.
        '''
        try:
            ccnx_dir = node.session.cfg['ccnx_dir']
        except KeyError:
            ccnx_dir = "/home/clauz/netgroup/ccn/ccnx-git"  #ARGH!

        cfg =  "#!/bin/bash\n"
        cfg += "# auto-generated by CCNrBerlinService (ccnr_berlindemo.py)\n"
        cfg += "# source /etc/profile \n"
        cfg += "# source /home/clauz/.bashrc \n"

        if filename == cls._configs[0]: # start
                return cfg + cls.generateCcnrConf(node, services, ccnx_dir, start=True)
        elif filename == cls._configs[1]: # stop
                return cfg + cls.generateCcnrConf(node, services, ccnx_dir, start=False)
        else:
                raise ValueError
    
    @classmethod
    def generateCcnrConf(cls, node, services, ccnx_dir, start):
            cfg = """

export CCNX_DIR=%s
export CCN_LOCAL_SOCKNAME="/tmp/.ccnd.%s.sock"
export CCND_KEYSTORE_DIRECTORY="/tmp/ccnd.keystore.%s"
export CCND_LOG="/tmp/ccnd.%s.log"
export HOME=$PWD
export REPO_DIR=/home/clauz/clone-git/emulation/berlindemo/$HOSTNAME

start() {
    sleep 10
    cd $REPO_DIR
	$CCNX_DIR/bin/ccnr > ~/ccnrb.log 2>&1 &
    wget -q -O - http://127.0.0.1:2012/reg/add/CommunityCCN/http/penguins.com
    wget -q -O - http://127.0.0.1:2012/reg/add/CommunityCCN/http/penguins.org
}

stop() {
	killall ccnr
}

""" % (ccnx_dir, node.name, node.name, node.name)
            if start:
                    cfg += "start\n"
            else:
                    cfg += "stop\n"
            return cfg



# this line is required to add the above class to the list of available services
addservice(CCNrBerlinService)

